name: OnlyFlick CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: onlyflick_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          # Trouver le r√©pertoire contenant go.mod
          if [ -f "go.mod" ]; then
            go mod download
          elif [ -f "cmd/server/go.mod" ]; then
            cd cmd/server && go mod download
          else
            echo "Could not find go.mod file"
            find . -name "go.mod" -type f
            exit 1
          fi

      - name: Build
        run: |
          if [ -f "go.mod" ]; then
            go build -v ./cmd/server
          elif [ -f "cmd/server/go.mod" ]; then
            cd cmd/server && go build -v .
          else
            echo "Could not find go.mod file"
            exit 1
          fi

      - name: Test
        run: |
          if [ -f "go.mod" ]; then
            go test -v -race ./cmd/server
          elif [ -f "cmd/server/go.mod" ]; then
            cd cmd/server && go test -v -race .
          else
            echo "Could not find go.mod file"
            exit 1
          fi
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/onlyflick_test?sslmode=disable"

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            barrydevops/onlyflick-backend:latest
            barrydevops/onlyflick-backend:${{ github.sha }}
          build-args: |
            VERSION=${{ github.sha }}
