name: OnlyFlick CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: onlyflick_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          # Trouver le répertoire contenant go.mod
          if [ -f "go.mod" ]; then
            go mod download
          elif [ -f "cmd/server/go.mod" ]; then
            cd cmd/server && go mod download
          else
            echo "Could not find go.mod file"
            find . -name "go.mod" -type f
            exit 1
          fi

      - name: Create test environment file
        run: |
          echo "# CI Test Environment" > .env
          echo "SECRET_KEY=12345678901234567890123456789012" >> .env
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/onlyflick_test?sslmode=disable" >> .env
          echo "IMAGEKIT_PRIVATE_KEY=private_test_key" >> .env
          echo "IMAGEKIT_PUBLIC_KEY=public_test_key" >> .env
          echo "IMAGEKIT_URL_ENDPOINT=https://ik.imagekit.io/test" >> .env
          echo "CI=true" >> .env
          echo "ENVIRONMENT=test" >> .env
          echo "✓ Test environment file created for CI"
          cat .env

      - name: Build
        run: |
          if [ -f "go.mod" ]; then
            go build -v ./cmd/server
          elif [ -f "cmd/server/go.mod" ]; then
            cd cmd/server && go build -v .
          else
            echo "Could not find go.mod file"
            exit 1
          fi

      - name: Test
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/onlyflick_test?sslmode=disable"
          SECRET_KEY: "12345678901234567890123456789012"
        run: |
          go test ./tests/unit/... -v
          go test ./tests/performance/... -v
          go test ./tests/e2e/... -v

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull backend image
        run: docker pull barrydevops/onlyflick-backend:latest
